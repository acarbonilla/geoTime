# Generated by Django 4.2.23 on 2025-08-02 14:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('employee', 'Employee'), ('team_leader', 'Team Leader'), ('supervisor', 'Supervisor'), ('management', 'Management'), ('it_support', 'IT Support')], default='employee', max_length=20)),
                ('hire_date', models.DateField()),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('terminated', 'Terminated'), ('on_leave', 'On Leave')], default='active', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('daily_work_hours', models.DecimalField(decimal_places=2, default=8.0, help_text='Standard daily work hours before overtime (actual work time)', max_digits=4)),
                ('overtime_threshold_hours', models.DecimalField(decimal_places=2, default=8.0, help_text='Hours worked before overtime kicks in (actual work time)', max_digits=4)),
                ('total_schedule_hours', models.DecimalField(decimal_places=2, default=9.0, help_text='Total hours from time in to time out (including flexible break time)', max_digits=4)),
                ('flexible_break_hours', models.DecimalField(decimal_places=2, default=1.0, help_text='Flexible break time included in total schedule', max_digits=4)),
                ('lunch_break_minutes', models.IntegerField(default=60, help_text='Standard lunch break duration in minutes')),
                ('break_threshold_minutes', models.IntegerField(default=30, help_text='Minimum break duration to be considered a break')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='geo.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('timezone_name', models.CharField(default='UTC', max_length=100)),
                ('timezone_offset', models.IntegerField(default=0)),
                ('geofence_radius', models.IntegerField(default=100, help_text='Radius in meters for geofencing')),
                ('min_accuracy_meters', models.IntegerField(default=100, help_text='Minimum required location accuracy in meters')),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, help_text='Full address of the location', null=True)),
                ('display_name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('time_in', 'Time In'), ('time_out', 'Time Out')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('event_time', models.DateTimeField(blank=True, help_text='The actual/corrected time of the event (if different from timestamp)', null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Latitude at time entry', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Longitude at time entry', max_digits=11, null=True)),
                ('accuracy', models.FloatField(blank=True, help_text='Location accuracy in meters', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('overtime', models.DecimalField(blank=True, decimal_places=2, help_text='Overtime hours for this time entry', max_digits=4, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_info', models.CharField(blank=True, max_length=255, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='geo.employee')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.location')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated or corrected this entry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_time_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Time Entry',
                'verbose_name_plural': 'Time Entries',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WorkSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('regular', 'Regular Work'), ('overtime', 'Overtime'), ('break', 'Break'), ('lunch', 'Lunch Break')], default='regular', max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_overtime', models.BooleanField(default=False)),
                ('is_break', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_sessions', to='geo.employee')),
                ('time_in_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_sessions_as_in', to='geo.timeentry')),
                ('time_out_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_sessions_as_out', to='geo.timeentry')),
            ],
            options={
                'verbose_name': 'Work Session',
                'verbose_name_plural': 'Work Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimeCorrectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('requested_time_in', models.TimeField(blank=True, null=True)),
                ('requested_time_out', models.TimeField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correction_requests', to='geo.employee')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_correction_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name (e.g., "Morning Shift", "Night Shift")', max_length=255)),
                ('time_in', models.TimeField()),
                ('time_out', models.TimeField()),
                ('is_night_shift', models.BooleanField(default=False, help_text='Check if this is a night shift (crosses midnight)')),
                ('template_type', models.CharField(choices=[('personal', 'Personal'), ('team', 'Team'), ('company', 'Company')], default='personal', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to='geo.employee')),
                ('team', models.ForeignKey(blank=True, help_text='Team this template belongs to (for team templates)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_templates', to='geo.department')),
            ],
            options={
                'verbose_name': 'Schedule Template',
                'verbose_name_plural': 'Schedule Templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OvertimeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('ticket', models.CharField(blank=True, max_length=255, null=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_overtime_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('vacation', 'Vacation Leave'), ('sick', 'Sick Leave'), ('personal', 'Personal Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('bereavement', 'Bereavement Leave'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('number_days', models.DecimalField(blank=True, decimal_places=2, help_text='Manual input of number of days (excluding weekends)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leave_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('scheduled_time_in', models.TimeField()),
                ('scheduled_time_out', models.TimeField()),
                ('is_night_shift', models.BooleanField(default=False, help_text='Check if this is a night shift (crosses midnight)')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='geo.employee')),
                ('template_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_schedules', to='geo.scheduletemplate')),
            ],
            options={
                'verbose_name': 'Employee Schedule',
                'verbose_name_plural': 'Employee Schedules',
                'ordering': ['date', 'employee__user__first_name'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='geo.location'),
        ),
        migrations.AddField(
            model_name='department',
            name='team_leaders',
            field=models.ManyToManyField(blank=True, related_name='led_departments', to='geo.employee'),
        ),
        migrations.CreateModel(
            name='DailyTimeSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('scheduled_time_in', models.TimeField(blank=True, null=True)),
                ('scheduled_time_out', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half_day', 'Half Day'), ('leave', 'On Leave'), ('holiday', 'Holiday'), ('weekend', 'Weekend')], default='absent', max_length=20)),
                ('billed_hours', models.DecimalField(decimal_places=2, default=0.0, help_text='Total billed/worked hours (BH)', max_digits=4)),
                ('late_minutes', models.IntegerField(default=0, help_text='Minutes late (LT)')),
                ('undertime_minutes', models.IntegerField(default=0, help_text='Undertime minutes (UT)')),
                ('night_differential_hours', models.DecimalField(decimal_places=2, default=0.0, help_text='Night differential hours (ND)', max_digits=4)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0.0, help_text='Overtime hours worked', max_digits=4)),
                ('total_break_minutes', models.IntegerField(default=0, help_text='Total break time in minutes')),
                ('lunch_break_minutes', models.IntegerField(default=0, help_text='Lunch break time in minutes')),
                ('is_weekend', models.BooleanField(default=False)),
                ('is_holiday', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_summaries', to='geo.employee')),
                ('schedule_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_summaries', to='geo.employeeschedule')),
                ('time_in_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_summary_as_in', to='geo.timeentry')),
                ('time_out_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_summary_as_out', to='geo.timeentry')),
            ],
            options={
                'verbose_name': 'Daily Time Summary',
                'verbose_name_plural': 'Daily Time Summaries',
                'ordering': ['-date', 'employee__user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='ChangeScheduleRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_date', models.DateField()),
                ('original_start_time', models.TimeField()),
                ('original_end_time', models.TimeField()),
                ('requested_date', models.DateField()),
                ('requested_start_time', models.TimeField()),
                ('requested_end_time', models.TimeField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_change_schedule_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_schedule_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='employeeschedule',
            index=models.Index(fields=['employee', 'date'], name='geo_employe_employe_6dc605_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeschedule',
            index=models.Index(fields=['date', 'scheduled_time_in'], name='geo_employe_date_4ba306_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='employeeschedule',
            unique_together={('employee', 'date')},
        ),
        migrations.AddIndex(
            model_name='dailytimesummary',
            index=models.Index(fields=['employee', 'date'], name='geo_dailyti_employe_300f9b_idx'),
        ),
        migrations.AddIndex(
            model_name='dailytimesummary',
            index=models.Index(fields=['date', 'status'], name='geo_dailyti_date_5b6730_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailytimesummary',
            unique_together={('employee', 'date')},
        ),
    ]
