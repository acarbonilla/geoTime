# Generated by Django 4.2.23 on 2025-07-28 14:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('employee', 'Employee'), ('team_leader', 'Team Leader'), ('supervisor', 'Supervisor'), ('management', 'Management'), ('it_support', 'IT Support')], default='employee', max_length=20)),
                ('hire_date', models.DateField()),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('terminated', 'Terminated'), ('on_leave', 'On Leave')], default='active', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('daily_work_hours', models.DecimalField(decimal_places=2, default=8.0, help_text='Standard daily work hours before overtime (actual work time)', max_digits=4)),
                ('overtime_threshold_hours', models.DecimalField(decimal_places=2, default=8.0, help_text='Hours worked before overtime kicks in (actual work time)', max_digits=4)),
                ('total_schedule_hours', models.DecimalField(decimal_places=2, default=9.0, help_text='Total hours from time in to time out (including flexible break time)', max_digits=4)),
                ('flexible_break_hours', models.DecimalField(decimal_places=2, default=1.0, help_text='Flexible break time included in total schedule', max_digits=4)),
                ('lunch_break_minutes', models.IntegerField(default=60, help_text='Standard lunch break duration in minutes')),
                ('break_threshold_minutes', models.IntegerField(default=30, help_text='Minimum break duration to be considered a break')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='geo.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('timezone_name', models.CharField(default='UTC', max_length=100)),
                ('timezone_offset', models.IntegerField(default=0)),
                ('geofence_radius', models.IntegerField(default=100, help_text='Radius in meters for geofencing')),
                ('min_accuracy_meters', models.IntegerField(default=100, help_text='Minimum required location accuracy in meters')),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, help_text='Full address of the location', null=True)),
                ('display_name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('time_in', 'Time In'), ('time_out', 'Time Out')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('event_time', models.DateTimeField(blank=True, help_text='The actual/corrected time of the event (if different from timestamp)', null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Latitude at time entry', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Longitude at time entry', max_digits=11, null=True)),
                ('accuracy', models.FloatField(blank=True, help_text='Location accuracy in meters', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('overtime', models.DecimalField(blank=True, decimal_places=2, help_text='Overtime hours for this time entry', max_digits=4, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_info', models.CharField(blank=True, max_length=255, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='geo.employee')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.location')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated or corrected this entry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_time_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Time Entry',
                'verbose_name_plural': 'Time Entries',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WorkSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('regular', 'Regular Work'), ('overtime', 'Overtime'), ('break', 'Break'), ('lunch', 'Lunch Break')], default='regular', max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_overtime', models.BooleanField(default=False)),
                ('is_break', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_sessions', to='geo.employee')),
                ('time_in_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_sessions_as_in', to='geo.timeentry')),
                ('time_out_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_sessions_as_out', to='geo.timeentry')),
            ],
            options={
                'verbose_name': 'Work Session',
                'verbose_name_plural': 'Work Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimeCorrectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('requested_time_in', models.TimeField(blank=True, null=True)),
                ('requested_time_out', models.TimeField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correction_requests', to='geo.employee')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_correction_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='OvertimeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('ticket', models.CharField(blank=True, max_length=255, null=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_overtime_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('vacation', 'Vacation Leave'), ('sick', 'Sick Leave'), ('personal', 'Personal Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('bereavement', 'Bereavement Leave'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('number_days', models.DecimalField(blank=True, decimal_places=2, help_text='Manual input of number of days (excluding weekends)', max_digits=5, null=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leave_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='geo.location'),
        ),
        migrations.AddField(
            model_name='department',
            name='team_leaders',
            field=models.ManyToManyField(blank=True, related_name='led_departments', to='geo.employee'),
        ),
        migrations.CreateModel(
            name='ChangeScheduleRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_date', models.DateField()),
                ('original_start_time', models.TimeField()),
                ('original_end_time', models.TimeField()),
                ('requested_date', models.DateField()),
                ('requested_start_time', models.TimeField()),
                ('requested_end_time', models.TimeField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_change_schedule_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_schedule_requests', to='geo.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
