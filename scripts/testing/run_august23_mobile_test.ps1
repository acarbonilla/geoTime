# PowerShell Script to Run August 23, 2025 Mobile Schedule Validation Test
# This test verifies that users CANNOT bypass schedule requirements in the mobile dashboard

Write-Host "üöÄ AUGUST 23, 2025 - MOBILE SCHEDULE VALIDATION SECURITY TEST" -ForegroundColor Cyan
Write-Host "=" * 80 -ForegroundColor Cyan
Write-Host "This test verifies that users CANNOT bypass schedule requirements" -ForegroundColor Yellow
Write-Host "in the mobile dashboard, regardless of any settings or attempts." -ForegroundColor Yellow
Write-Host ""

# Check if we're in the right directory
if (-not (Test-Path "backend")) {
    Write-Host "‚ùå Error: Please run this script from the project root directory" -ForegroundColor Red
    Write-Host "   Current directory: $(Get-Location)" -ForegroundColor Red
    Write-Host "   Expected: Should contain 'backend' folder" -ForegroundColor Red
    exit 1
}

# Check if virtual environment exists
if (-not (Test-Path ".venv")) {
    Write-Host "‚ùå Error: Virtual environment not found" -ForegroundColor Red
    Write-Host "   Please create a virtual environment first:" -ForegroundColor Red
    Write-Host "   python -m venv .venv" -ForegroundColor Red
    exit 1
}

# Activate virtual environment
Write-Host "üîß Activating virtual environment..." -ForegroundColor Green
& ".venv\Scripts\Activate.ps1"

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Failed to activate virtual environment" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Virtual environment activated" -ForegroundColor Green

# Change to backend directory
Write-Host "üìÅ Changing to backend directory..." -ForegroundColor Green
Set-Location "backend"

# Check if test file exists
$testFile = "test_august23_mobile_schedule_validation.py"
if (-not (Test-Path $testFile)) {
    Write-Host "‚ùå Error: Test file not found: $testFile" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Test file found: $testFile" -ForegroundColor Green

# Run the test
Write-Host ""
Write-Host "üß™ Running Mobile Schedule Validation Security Test..." -ForegroundColor Green
Write-Host "This will test:" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Valid Schedule - Should allow time operations" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ No Schedule - Should block time operations" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Incomplete Schedule - Should block time operations" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Bypass Prevention - Even with require_schedule_compliance = False" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Frontend and Backend Security Layers" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Time Operations with Valid Schedule" -ForegroundColor Yellow
Write-Host ""

# Run the test with Python
try {
    & python $testFile
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "üéâ TEST COMPLETED SUCCESSFULLY!" -ForegroundColor Green
        Write-Host "‚úÖ All security measures are working correctly" -ForegroundColor Green
        Write-Host "‚úÖ Users CANNOT bypass schedule requirements" -ForegroundColor Green
    } else {
        Write-Host ""
        Write-Host "‚ùå TEST FAILED!" -ForegroundColor Red
        Write-Host "‚ùå Some security measures may not be working correctly" -ForegroundColor Red
        Write-Host "‚ùå Users might be able to bypass schedule requirements" -ForegroundColor Red
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå ERROR RUNNING TEST: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "‚ùå Please check the error details above" -ForegroundColor Red
}

# Return to original directory
Set-Location ".."

Write-Host ""
Write-Host "üìã TEST SUMMARY:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ This test verified mobile schedule validation security" -ForegroundColor White
Write-Host "   ‚Ä¢ Frontend blocks time operations without schedule" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend enforces schedule requirement unconditionally" -ForegroundColor White
Write-Host "   ‚Ä¢ No conditional logic that can be manipulated" -ForegroundColor White
Write-Host "   ‚Ä¢ Multiple validation layers prevent bypassing" -ForegroundColor White
Write-Host "   ‚Ä¢ Even require_schedule_compliance = False doesn't bypass" -ForegroundColor White

Write-Host ""
Write-Host "üîí SECURITY VERIFICATION COMPLETE" -ForegroundColor Green
Write-Host "The mobile dashboard is now secure against schedule bypass attempts." -ForegroundColor Green
